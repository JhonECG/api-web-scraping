import requests
from bs4 import BeautifulSoup
import boto3
import uuid

def lambda_handler(event, context):
    # 1. URL del IGP con los últimos sismos reportados
    url = "https://ultimosismo.igp.gob.pe/ultimo-sismo/sismos-reportados"
    response = requests.get(url)

    if response.status_code != 200:
        return {
            'statusCode': response.status_code,
            'body': 'Error al acceder a la página web del IGP'
        }

    # 2. Parsear el contenido HTML
    soup = BeautifulSoup(response.content, 'html.parser')

    # 3. Buscar la tabla de sismos
    table = soup.find('table')
    if not table:
        return {
            'statusCode': 404,
            'body': 'No se encontró la tabla en la página del IGP'
        }

    # 4. Extraer encabezados de la tabla
    headers = [th.text.strip() for th in table.find_all('th')]

    # 5. Extraer las 10 primeras filas de datos
    rows = []
    for tr in table.find_all('tr')[1:11]:  # Saltar el encabezado
        cells = tr.find_all('td')
        if len(cells) == len(headers):
            row_data = {headers[i]: cells[i].text.strip() for i in range(len(cells))}
            rows.append(row_data)

    # 6. Conectar con DynamoDB y apuntar a la tabla 'SismosIGP'
    dynamodb = boto3.resource('dynamodb')
    table = dynamodb.Table('SismosIGP')

    # 7. Limpiar la tabla antes de insertar nuevos datos
    scan = table.scan()
    with table.batch_writer() as batch:
        for item in scan['Items']:
            batch.delete_item(Key={'id': item['id']})

    # 8. Insertar los nuevos datos en DynamoDB
    for i, row in enumerate(rows):
        row['#'] = i + 1               # Agregar número de fila (opcional)
        row['id'] = str(uuid.uuid4()) # ID único para DynamoDB
        table.put_item(Item=row)

    # 9. Retornar respuesta exitosa con los datos insertados
    return {
        'statusCode': 200,
        'body': rows
    }
